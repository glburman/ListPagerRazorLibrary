@page "{handler?}"
@namespace ListPagerExamples.Areas.ViewComponent.Pages
@model AjaxSingleModel
@{
    Layout = "_LayoutForExamples";
    ViewData["Title"] = "ListPager Examples - Ajax - Single Partial";
}
@section Scripts{
    <script>
        //Pager instance needs page scope
        let pager
    </script>

    <script type="module">
        import Pager from "../_content/ListPagerRazorLibrary/js/pager.js"    //path in ListPagerRazorLibrary
        let modelState =@Json.Serialize(Model.Parameters);
        pager = new Pager(modelState.pager, {})
        const constants = {
            urlBase: "ajaxsingle/partial",
            tableTarget: "partial-view-target"
        }

        let afToken = null;
        window.onload = () => {
            afToken = document.querySelectorAll("input[name='__RequestVerificationToken']")[0].value;
            pager.postState(constants.urlBase, afToken, modelState, constants.tableTarget)
        }
        document.addEventListener(Pager.constants.pagingEventName, (event) => {
            const s = document.getElementById("filter")
            if (s) modelState.searchTerm = s.value
            pager.postEvent(event, constants.urlBase, afToken, modelState, constants.tableTarget)
        })
    </script>
}
@section Css{

}

@section Notes{
    <dl>
        <dt>
            In this Ajax demo
        </dt>
        <dd>
            <ul>
                <li>
                    <p>
                        a single Partial View
                        (<code>ListPagerExamples/Pages/Shared/_CombinedPartial.cshtml</code>) contains both ListPager and
                        the associated List Table partial views. Onload and when handling ListPager's paging events a
                        single Ajax call retrieves and renders the 'combined' partial view.
                    </p>
                </li>
                <li><p>the pager is styled using the <code>list-pager-sm</code> class</p></li>
                <li>
                    <p>
                        the <code>ShowDropDown</code> flag is unconditionally set to <code>true</code>, but the
                        <strong>standard</strong> <code>ListPagerDropdown</code> View Component overrides this when <code>PageCount < MaxPageLinks</code>
                        (i.e. when the Dropdown is irrelevant) instead displaying a placeholder space.
                    </p>
                </li>
            </ul>
        </dd>
    </dl>
}

@Html.AntiForgeryToken()

<div id="partial-view-target">
</div>

