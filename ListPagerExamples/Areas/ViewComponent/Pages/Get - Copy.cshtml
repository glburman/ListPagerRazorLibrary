@page
@namespace ListPagerExamples.Areas.ViewComponent.Pages
@model VCGetModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_LayoutForExamples";
    ViewData["Title"] = "ListPager Examples - Partial View GET";
    var pager = Model.Parameters.Pager;
    pager.ShowDropDown = false;
}
@section Scripts{
    <script>
    //Page scope, not module scope
    let pager
    let pagerState = @Json.Serialize(@pager);
    let filter = '@Model.Parameters.SearchTerm';
    const constants = {}
    </script>
    <script type="module">
        import Pager from "../_content/ListPagerRazorLibrary/js/pager.js"    //path in ListPagerRazorLibrary
        pager = new Pager(pagerState, {})
        document.addEventListener(Pager.constants.pagingEventName, (e) => {
            let { pageNumber, pageSize } = { ...e.detail.ListPagerModel }
            let filter = document.getElementById("filter").value
            window.location.search = `PageNumber=${pageNumber}&PageSize=${pageSize}&search=${filter}`
        })
    </script>
}

@section Css{
    <link rel="stylesheet" href="~/css/pager-override.css" />
}

@section Notes{

    <dl>
        <dt>
            The GET Demo
        </dt>
        <dd>
            <ul>
                <li><p>Shows how to implement a full-page GET scenario</p></li>
                <li><p>Uses the library's <code>_ListPagerShort</code> minimalist partial view</p></li>
                <li><p>Renders the <code>ListPagerPageOf</code> as a spearate partial view</p></li>
                <li><p>Conditionally renders the <code>ListPagerRecordsOf</code> if the list is being filtered, based on the <code>isFiltered</code> pager property. The search functionality is accomodated but is external to the library</p></li>
                <li>
                    <p>Applies custom styling to the pager links (~/css/pager-override.css)</p>
                    <p>
                        <code>
                            <pre>
                            .page-link { background-color: salmon;}

                            /* required when rendered separately*/
                            li.pager-range {list-style: none;}
                            </pre>
                        </code>
                    </p>
                </li>
            </ul>
        </dd>
    </dl>
}

<div class="col-7 mx-auto">
    <div class="row my-2 d-flex justify-content-end">
        <!-- this is not part of the library -->
        <div class="col-md-4">
            <partial name="_ListFilterPartial" model='@Model.Parameters.SearchTerm' />
        </div>
    </div>
    <div class="row d-flex justify-content-center">

        <!-- These come from the ListPager Library-->
        <div class="col-md-3">
            <partial name="Components/ListPagerPageOf" model="@pager" />
        </div>
        <div class="col-md-6">
            <partial name="_ListPagerShort" model="@pager" />
        </div>
    </div>

    <div class="row">
        <div class="mx-auto col">
            <!--this table belongs to the host app, its not a ListPager partial -->
            <partial name="_ListTable" model="@Model.Bloggers" />
        </div>
    </div>
</div>
